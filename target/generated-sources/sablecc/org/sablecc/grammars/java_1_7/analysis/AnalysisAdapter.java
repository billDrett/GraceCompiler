/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.grammars.java_1_7.analysis;

import java.util.*;
import org.sablecc.grammars.java_1_7.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    public void caseTAbstractKeyword(TAbstractKeyword node)
    {
        defaultCase(node);
    }

    public void caseTAssertKeyword(TAssertKeyword node)
    {
        defaultCase(node);
    }

    public void caseTBooleanKeyword(TBooleanKeyword node)
    {
        defaultCase(node);
    }

    public void caseTBreakKeyword(TBreakKeyword node)
    {
        defaultCase(node);
    }

    public void caseTByteKeyword(TByteKeyword node)
    {
        defaultCase(node);
    }

    public void caseTCaseKeyword(TCaseKeyword node)
    {
        defaultCase(node);
    }

    public void caseTCatchKeyword(TCatchKeyword node)
    {
        defaultCase(node);
    }

    public void caseTCharKeyword(TCharKeyword node)
    {
        defaultCase(node);
    }

    public void caseTClassKeyword(TClassKeyword node)
    {
        defaultCase(node);
    }

    public void caseTConstKeyword(TConstKeyword node)
    {
        defaultCase(node);
    }

    public void caseTContinueKeyword(TContinueKeyword node)
    {
        defaultCase(node);
    }

    public void caseTDefaultKeyword(TDefaultKeyword node)
    {
        defaultCase(node);
    }

    public void caseTDoKeyword(TDoKeyword node)
    {
        defaultCase(node);
    }

    public void caseTDoubleKeyword(TDoubleKeyword node)
    {
        defaultCase(node);
    }

    public void caseTElseKeyword(TElseKeyword node)
    {
        defaultCase(node);
    }

    public void caseTEnumKeyword(TEnumKeyword node)
    {
        defaultCase(node);
    }

    public void caseTExtendsKeyword(TExtendsKeyword node)
    {
        defaultCase(node);
    }

    public void caseTFinalKeyword(TFinalKeyword node)
    {
        defaultCase(node);
    }

    public void caseTFinallyKeyword(TFinallyKeyword node)
    {
        defaultCase(node);
    }

    public void caseTFloatKeyword(TFloatKeyword node)
    {
        defaultCase(node);
    }

    public void caseTForKeyword(TForKeyword node)
    {
        defaultCase(node);
    }

    public void caseTIfKeyword(TIfKeyword node)
    {
        defaultCase(node);
    }

    public void caseTGotoKeyword(TGotoKeyword node)
    {
        defaultCase(node);
    }

    public void caseTImplementsKeyword(TImplementsKeyword node)
    {
        defaultCase(node);
    }

    public void caseTImportKeyword(TImportKeyword node)
    {
        defaultCase(node);
    }

    public void caseTInstanceofKeyword(TInstanceofKeyword node)
    {
        defaultCase(node);
    }

    public void caseTIntKeyword(TIntKeyword node)
    {
        defaultCase(node);
    }

    public void caseTInterfaceKeyword(TInterfaceKeyword node)
    {
        defaultCase(node);
    }

    public void caseTLongKeyword(TLongKeyword node)
    {
        defaultCase(node);
    }

    public void caseTNativeKeyword(TNativeKeyword node)
    {
        defaultCase(node);
    }

    public void caseTNewKeyword(TNewKeyword node)
    {
        defaultCase(node);
    }

    public void caseTPackageKeyword(TPackageKeyword node)
    {
        defaultCase(node);
    }

    public void caseTPrivateKeyword(TPrivateKeyword node)
    {
        defaultCase(node);
    }

    public void caseTProtectedKeyword(TProtectedKeyword node)
    {
        defaultCase(node);
    }

    public void caseTPublicKeyword(TPublicKeyword node)
    {
        defaultCase(node);
    }

    public void caseTReturnKeyword(TReturnKeyword node)
    {
        defaultCase(node);
    }

    public void caseTShortKeyword(TShortKeyword node)
    {
        defaultCase(node);
    }

    public void caseTStaticKeyword(TStaticKeyword node)
    {
        defaultCase(node);
    }

    public void caseTStrictfpKeyword(TStrictfpKeyword node)
    {
        defaultCase(node);
    }

    public void caseTSuperKeyword(TSuperKeyword node)
    {
        defaultCase(node);
    }

    public void caseTSwitchKeyword(TSwitchKeyword node)
    {
        defaultCase(node);
    }

    public void caseTSynchronizedKeyword(TSynchronizedKeyword node)
    {
        defaultCase(node);
    }

    public void caseTThisKeyword(TThisKeyword node)
    {
        defaultCase(node);
    }

    public void caseTThrowKeyword(TThrowKeyword node)
    {
        defaultCase(node);
    }

    public void caseTThrowsKeyword(TThrowsKeyword node)
    {
        defaultCase(node);
    }

    public void caseTTransientKeyword(TTransientKeyword node)
    {
        defaultCase(node);
    }

    public void caseTTryKeyword(TTryKeyword node)
    {
        defaultCase(node);
    }

    public void caseTVoidKeyword(TVoidKeyword node)
    {
        defaultCase(node);
    }

    public void caseTVolatileKeyword(TVolatileKeyword node)
    {
        defaultCase(node);
    }

    public void caseTWhileKeyword(TWhileKeyword node)
    {
        defaultCase(node);
    }

    public void caseTIntegerLiteral(TIntegerLiteral node)
    {
        defaultCase(node);
    }

    public void caseTFloatingPointLiteral(TFloatingPointLiteral node)
    {
        defaultCase(node);
    }

    public void caseTBooleanLiteral(TBooleanLiteral node)
    {
        defaultCase(node);
    }

    public void caseTCharacterLiteral(TCharacterLiteral node)
    {
        defaultCase(node);
    }

    public void caseTStringLiteral(TStringLiteral node)
    {
        defaultCase(node);
    }

    public void caseTNullLiteral(TNullLiteral node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    public void caseTLBrc(TLBrc node)
    {
        defaultCase(node);
    }

    public void caseTRBrc(TRBrc node)
    {
        defaultCase(node);
    }

    public void caseTLBkt(TLBkt node)
    {
        defaultCase(node);
    }

    public void caseTRBkt(TRBkt node)
    {
        defaultCase(node);
    }

    public void caseTSemi(TSemi node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTAssign(TAssign node)
    {
        defaultCase(node);
    }

    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    public void caseTEmark(TEmark node)
    {
        defaultCase(node);
    }

    public void caseTTilde(TTilde node)
    {
        defaultCase(node);
    }

    public void caseTQmark(TQmark node)
    {
        defaultCase(node);
    }

    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    public void caseTLteq(TLteq node)
    {
        defaultCase(node);
    }

    public void caseTGteq(TGteq node)
    {
        defaultCase(node);
    }

    public void caseTNeq(TNeq node)
    {
        defaultCase(node);
    }

    public void caseTAmpAmp(TAmpAmp node)
    {
        defaultCase(node);
    }

    public void caseTBarBar(TBarBar node)
    {
        defaultCase(node);
    }

    public void caseTPlusPlus(TPlusPlus node)
    {
        defaultCase(node);
    }

    public void caseTMinusMinus(TMinusMinus node)
    {
        defaultCase(node);
    }

    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    public void caseTStar(TStar node)
    {
        defaultCase(node);
    }

    public void caseTSlash(TSlash node)
    {
        defaultCase(node);
    }

    public void caseTAmp(TAmp node)
    {
        defaultCase(node);
    }

    public void caseTBar(TBar node)
    {
        defaultCase(node);
    }

    public void caseTCaret(TCaret node)
    {
        defaultCase(node);
    }

    public void caseTPercent(TPercent node)
    {
        defaultCase(node);
    }

    public void caseTShl(TShl node)
    {
        defaultCase(node);
    }

    public void caseTShr(TShr node)
    {
        defaultCase(node);
    }

    public void caseTUshr(TUshr node)
    {
        defaultCase(node);
    }

    public void caseTPlusAssign(TPlusAssign node)
    {
        defaultCase(node);
    }

    public void caseTMinusAssign(TMinusAssign node)
    {
        defaultCase(node);
    }

    public void caseTStarAssign(TStarAssign node)
    {
        defaultCase(node);
    }

    public void caseTSlashAssign(TSlashAssign node)
    {
        defaultCase(node);
    }

    public void caseTAmpAssign(TAmpAssign node)
    {
        defaultCase(node);
    }

    public void caseTBarAssign(TBarAssign node)
    {
        defaultCase(node);
    }

    public void caseTCaretAssign(TCaretAssign node)
    {
        defaultCase(node);
    }

    public void caseTPercentAssign(TPercentAssign node)
    {
        defaultCase(node);
    }

    public void caseTShlAssign(TShlAssign node)
    {
        defaultCase(node);
    }

    public void caseTShrAssign(TShrAssign node)
    {
        defaultCase(node);
    }

    public void caseTUshrAssign(TUshrAssign node)
    {
        defaultCase(node);
    }

    public void caseTDotDotDot(TDotDotDot node)
    {
        defaultCase(node);
    }

    public void caseTAt(TAt node)
    {
        defaultCase(node);
    }

    public void caseTWhiteSpaces(TWhiteSpaces node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
