/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.grammars.java_1_7.lexer;

import java.io.*;
import org.sablecc.grammars.java_1_7.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 63:
                        {
                            @SuppressWarnings("hiding") Token token = new63(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 64:
                        {
                            @SuppressWarnings("hiding") Token token = new64(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 65:
                        {
                            @SuppressWarnings("hiding") Token token = new65(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 66:
                        {
                            @SuppressWarnings("hiding") Token token = new66(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 67:
                        {
                            @SuppressWarnings("hiding") Token token = new67(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 68:
                        {
                            @SuppressWarnings("hiding") Token token = new68(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 69:
                        {
                            @SuppressWarnings("hiding") Token token = new69(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 70:
                        {
                            @SuppressWarnings("hiding") Token token = new70(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 71:
                        {
                            @SuppressWarnings("hiding") Token token = new71(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 72:
                        {
                            @SuppressWarnings("hiding") Token token = new72(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 73:
                        {
                            @SuppressWarnings("hiding") Token token = new73(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 74:
                        {
                            @SuppressWarnings("hiding") Token token = new74(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 75:
                        {
                            @SuppressWarnings("hiding") Token token = new75(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 76:
                        {
                            @SuppressWarnings("hiding") Token token = new76(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 77:
                        {
                            @SuppressWarnings("hiding") Token token = new77(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 78:
                        {
                            @SuppressWarnings("hiding") Token token = new78(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 79:
                        {
                            @SuppressWarnings("hiding") Token token = new79(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 80:
                        {
                            @SuppressWarnings("hiding") Token token = new80(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 81:
                        {
                            @SuppressWarnings("hiding") Token token = new81(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 82:
                        {
                            @SuppressWarnings("hiding") Token token = new82(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 83:
                        {
                            @SuppressWarnings("hiding") Token token = new83(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 84:
                        {
                            @SuppressWarnings("hiding") Token token = new84(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 85:
                        {
                            @SuppressWarnings("hiding") Token token = new85(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 86:
                        {
                            @SuppressWarnings("hiding") Token token = new86(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 87:
                        {
                            @SuppressWarnings("hiding") Token token = new87(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 88:
                        {
                            @SuppressWarnings("hiding") Token token = new88(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 89:
                        {
                            @SuppressWarnings("hiding") Token token = new89(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 90:
                        {
                            @SuppressWarnings("hiding") Token token = new90(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 91:
                        {
                            @SuppressWarnings("hiding") Token token = new91(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 92:
                        {
                            @SuppressWarnings("hiding") Token token = new92(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 93:
                        {
                            @SuppressWarnings("hiding") Token token = new93(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 94:
                        {
                            @SuppressWarnings("hiding") Token token = new94(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 95:
                        {
                            @SuppressWarnings("hiding") Token token = new95(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 96:
                        {
                            @SuppressWarnings("hiding") Token token = new96(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 97:
                        {
                            @SuppressWarnings("hiding") Token token = new97(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 98:
                        {
                            @SuppressWarnings("hiding") Token token = new98(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 99:
                        {
                            @SuppressWarnings("hiding") Token token = new99(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 100:
                        {
                            @SuppressWarnings("hiding") Token token = new100(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 101:
                        {
                            @SuppressWarnings("hiding") Token token = new101(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 102:
                        {
                            @SuppressWarnings("hiding") Token token = new102(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 103:
                        {
                            @SuppressWarnings("hiding") Token token = new103(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 104:
                        {
                            @SuppressWarnings("hiding") Token token = new104(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 105:
                        {
                            @SuppressWarnings("hiding") Token token = new105(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 106:
                        {
                            @SuppressWarnings("hiding") Token token = new106(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAbstractKeyword(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssertKeyword(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBooleanKeyword(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBreakKeyword(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TByteKeyword(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaseKeyword(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCatchKeyword(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCharKeyword(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TClassKeyword(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConstKeyword(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TContinueKeyword(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDefaultKeyword(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoKeyword(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoubleKeyword(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElseKeyword(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnumKeyword(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TExtendsKeyword(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFinalKeyword(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFinallyKeyword(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloatKeyword(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TForKeyword(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIfKeyword(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGotoKeyword(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImplementsKeyword(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImportKeyword(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInstanceofKeyword(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntKeyword(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInterfaceKeyword(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLongKeyword(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNativeKeyword(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNewKeyword(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPackageKeyword(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPrivateKeyword(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProtectedKeyword(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPublicKeyword(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReturnKeyword(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShortKeyword(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStaticKeyword(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStrictfpKeyword(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSuperKeyword(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSwitchKeyword(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSynchronizedKeyword(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThisKeyword(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThrowKeyword(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThrowsKeyword(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTransientKeyword(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTryKeyword(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVoidKeyword(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVolatileKeyword(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhileKeyword(line, pos); }
    Token new51(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntegerLiteral(text, line, pos); }
    Token new52(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloatingPointLiteral(text, line, pos); }
    Token new53(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBooleanLiteral(text, line, pos); }
    Token new54(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCharacterLiteral(text, line, pos); }
    Token new55(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringLiteral(text, line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNullLiteral(line, pos); }
    Token new57(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }
    Token new58(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new59(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new60(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrc(line, pos); }
    Token new61(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrc(line, pos); }
    Token new62(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBkt(line, pos); }
    Token new63(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBkt(line, pos); }
    Token new64(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemi(line, pos); }
    Token new65(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new66(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new67(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssign(line, pos); }
    Token new68(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLt(line, pos); }
    Token new69(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new70(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEmark(line, pos); }
    Token new71(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTilde(line, pos); }
    Token new72(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TQmark(line, pos); }
    Token new73(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new74(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEq(line, pos); }
    Token new75(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLteq(line, pos); }
    Token new76(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGteq(line, pos); }
    Token new77(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNeq(line, pos); }
    Token new78(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAmpAmp(line, pos); }
    Token new79(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarBar(line, pos); }
    Token new80(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlusPlus(line, pos); }
    Token new81(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinusMinus(line, pos); }
    Token new82(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new83(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new84(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new85(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlash(line, pos); }
    Token new86(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAmp(line, pos); }
    Token new87(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBar(line, pos); }
    Token new88(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaret(line, pos); }
    Token new89(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPercent(line, pos); }
    Token new90(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShl(line, pos); }
    Token new91(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShr(line, pos); }
    Token new92(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUshr(line, pos); }
    Token new93(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlusAssign(line, pos); }
    Token new94(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinusAssign(line, pos); }
    Token new95(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStarAssign(line, pos); }
    Token new96(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlashAssign(line, pos); }
    Token new97(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAmpAssign(line, pos); }
    Token new98(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarAssign(line, pos); }
    Token new99(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaretAssign(line, pos); }
    Token new100(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPercentAssign(line, pos); }
    Token new101(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShlAssign(line, pos); }
    Token new102(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShrAssign(line, pos); }
    Token new103(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUshrAssign(line, pos); }
    Token new104(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDotDotDot(line, pos); }
    Token new105(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAt(line, pos); }
    Token new106(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhiteSpaces(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {33, 33, 6}, {34, 34, 7}, {36, 36, 8}, {37, 37, 9}, {38, 38, 10}, {39, 39, 11}, {40, 40, 12}, {41, 41, 13}, {42, 42, 14}, {43, 43, 15}, {44, 44, 16}, {45, 45, 17}, {46, 46, 18}, {47, 47, 19}, {48, 48, 20}, {49, 49, 21}, {50, 50, 22}, {51, 51, 23}, {52, 52, 24}, {53, 53, 25}, {54, 54, 26}, {55, 55, 27}, {56, 56, 28}, {57, 57, 29}, {58, 58, 30}, {59, 59, 31}, {60, 60, 32}, {61, 61, 33}, {62, 62, 34}, {63, 63, 35}, {64, 64, 36}, {65, 90, 37}, {91, 91, 38}, {93, 93, 39}, {94, 94, 40}, {95, 95, 41}, {97, 97, 42}, {98, 98, 43}, {99, 99, 44}, {100, 100, 45}, {101, 101, 46}, {102, 102, 47}, {103, 103, 48}, {104, 104, 49}, {105, 105, 50}, {106, 107, 49}, {108, 108, 51}, {109, 109, 49}, {110, 110, 52}, {111, 111, 49}, {112, 112, 53}, {113, 113, 49}, {114, 114, 54}, {115, 115, 55}, {116, 116, 56}, {117, 117, 49}, {118, 118, 57}, {119, 119, 58}, {120, 122, 49}, {123, 123, 59}, {124, 124, 60}, {125, 125, 61}, {126, 126, 62}, {170, 170, 63}, {181, 181, 64}, {186, 186, 65}, {192, 214, 66}, {216, 246, 67}, {248, 501, 68}, {506, 535, 69}, {592, 680, 70}, {688, 696, 71}, {699, 705, 72}, {720, 721, 73}, {736, 740, 74}, {890, 890, 75}, {902, 902, 76}, {904, 906, 77}, {908, 908, 78}, {910, 929, 79}, {931, 974, 80}, {976, 982, 81}, {986, 986, 82}, {988, 988, 83}, {990, 990, 84}, {992, 992, 85}, {994, 1011, 86}, {1025, 1036, 87}, {1038, 1103, 88}, {1105, 1116, 89}, {1118, 1153, 90}, {1168, 1220, 91}, {1223, 1224, 92}, {1227, 1228, 93}, {1232, 1259, 94}, {1262, 1269, 95}, {1272, 1273, 96}, {1329, 1366, 97}, {1369, 1369, 98}, {1377, 1415, 99}, {1488, 1514, 100}, {1520, 1522, 101}, {1569, 1594, 102}, {1600, 1610, 103}, {1649, 1719, 104}, {1722, 1726, 105}, {1728, 1742, 106}, {1744, 1747, 107}, {1749, 1749, 108}, {1765, 1766, 109}, {2309, 2361, 110}, {2365, 2365, 111}, {2392, 2401, 112}, {2437, 2444, 113}, {2447, 2448, 114}, {2451, 2472, 115}, {2474, 2480, 116}, {2482, 2482, 117}, {2486, 2489, 118}, {2524, 2525, 119}, {2527, 2529, 120}, {2544, 2545, 121}, {2565, 2570, 122}, {2575, 2576, 123}, {2579, 2600, 124}, {2602, 2608, 125}, {2610, 2611, 126}, {2613, 2614, 127}, {2616, 2617, 128}, {2649, 2652, 129}, {2654, 2654, 130}, {2674, 2676, 131}, {2693, 2699, 132}, {2701, 2701, 133}, {2703, 2705, 134}, {2707, 2728, 135}, {2730, 2736, 136}, {2738, 2739, 137}, {2741, 2745, 138}, {2749, 2749, 139}, {2784, 2784, 140}, {2821, 2828, 141}, {2831, 2832, 142}, {2835, 2856, 143}, {2858, 2864, 144}, {2866, 2867, 145}, {2870, 2873, 146}, {2877, 2877, 147}, {2908, 2909, 148}, {2911, 2913, 149}, {2949, 2954, 150}, {2958, 2960, 151}, {2962, 2965, 152}, {2969, 2970, 153}, {2972, 2972, 154}, {2974, 2975, 155}, {2979, 2980, 156}, {2984, 2986, 157}, {2990, 2997, 158}, {2999, 3001, 159}, {3077, 3084, 160}, {3086, 3088, 161}, {3090, 3112, 162}, {3114, 3123, 163}, {3125, 3129, 164}, {3168, 3169, 165}, {3205, 3212, 166}, {3214, 3216, 167}, {3218, 3240, 168}, {3242, 3251, 169}, {3253, 3257, 170}, {3294, 3294, 171}, {3296, 3297, 172}, {3333, 3340, 173}, {3342, 3344, 174}, {3346, 3368, 175}, {3370, 3385, 176}, {3424, 3425, 177}, {3585, 3630, 178}, {3632, 3632, 179}, {3634, 3635, 180}, {3648, 3654, 181}, {3713, 3714, 182}, {3716, 3716, 183}, {3719, 3720, 184}, {3722, 3722, 185}, {3725, 3725, 186}, {3732, 3735, 187}, {3737, 3743, 188}, {3745, 3747, 189}, {3749, 3749, 190}, {3751, 3751, 191}, {3754, 3755, 192}, {3757, 3758, 193}, {3760, 3760, 194}, {3762, 3763, 195}, {3773, 3773, 196}, {3776, 3780, 197}, {3782, 3782, 198}, {3804, 3805, 199}, {3904, 3911, 200}, {3913, 3945, 201}, {4256, 4293, 202}, {4304, 4342, 203}, {4352, 4441, 204}, {4447, 4514, 205}, {4520, 4601, 206}, {7680, 7835, 207}, {7840, 7929, 208}, {7936, 7957, 209}, {7960, 7965, 210}, {7968, 8005, 211}, {8008, 8013, 212}, {8016, 8023, 213}, {8025, 8025, 214}, {8027, 8027, 215}, {8029, 8029, 216}, {8031, 8061, 217}, {8064, 8116, 218}, {8118, 8124, 219}, {8126, 8126, 220}, {8130, 8132, 221}, {8134, 8140, 222}, {8144, 8147, 223}, {8150, 8155, 224}, {8160, 8172, 225}, {8178, 8180, 226}, {8182, 8188, 227}, {8319, 8319, 228}, {8450, 8450, 229}, {8455, 8455, 230}, {8458, 8467, 231}, {8469, 8469, 232}, {8472, 8477, 233}, {8484, 8484, 234}, {8486, 8486, 235}, {8488, 8488, 236}, {8490, 8497, 237}, {8499, 8504, 238}, {12293, 12293, 239}, {12337, 12341, 240}, {12353, 12436, 241}, {12443, 12446, 242}, {12449, 12538, 243}, {12540, 12542, 244}, {12549, 12588, 245}, {12593, 12686, 246}, {19968, 40869, 247}, {44032, 55203, 248}, {63744, 64045, 249}, {64256, 64262, 250}, {64275, 64279, 251}, {64287, 64296, 252}, {64298, 64310, 253}, {64312, 64316, 254}, {64318, 64318, 255}, {64320, 64321, 256}, {64323, 64324, 257}, {64326, 64433, 258}, {64467, 64829, 259}, {64848, 64911, 260}, {64914, 64967, 261}, {65008, 65019, 262}, {65136, 65138, 263}, {65140, 65140, 264}, {65142, 65276, 265}, {65313, 65338, 266}, {65345, 65370, 267}, {65382, 65470, 268}, {65474, 65479, 269}, {65482, 65487, 270}, {65490, 65495, 271}, {65498, 65500, 272}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 273}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 274}, },
            {{0, 9, 275}, {11, 12, 275}, {14, 33, 275}, {34, 34, 276}, {35, 91, 275}, {92, 92, 277}, {93, 65535, 275}, },
            {{36, 36, 278}, {48, 57, 279}, {65, 90, 280}, {95, 95, 281}, {97, 122, 282}, {170, 170, 283}, {181, 181, 284}, {186, 186, 285}, {192, 214, 286}, {216, 246, 287}, {248, 501, 288}, {506, 535, 289}, {592, 680, 290}, {688, 696, 291}, {699, 705, 292}, {720, 721, 293}, {736, 740, 294}, {890, 890, 295}, {902, 902, 296}, {904, 906, 297}, {908, 908, 298}, {910, 929, 299}, {931, 974, 300}, {976, 982, 301}, {986, 986, 302}, {988, 988, 303}, {990, 990, 304}, {992, 992, 305}, {994, 1011, 306}, {1025, 1036, 307}, {1038, 1103, 308}, {1105, 1116, 309}, {1118, 1153, 310}, {1168, 1220, 311}, {1223, 1224, 312}, {1227, 1228, 313}, {1232, 1259, 314}, {1262, 1269, 315}, {1272, 1273, 316}, {1329, 1366, 317}, {1369, 1369, 318}, {1377, 1415, 319}, {1488, 1514, 320}, {1520, 1522, 321}, {1569, 1594, 322}, {1600, 1610, 323}, {1632, 1641, 324}, {1649, 1719, 325}, {1722, 1726, 326}, {1728, 1742, 327}, {1744, 1747, 328}, {1749, 1749, 329}, {1765, 1766, 330}, {1776, 1785, 331}, {2309, 2361, 332}, {2365, 2365, 333}, {2392, 2401, 334}, {2406, 2415, 335}, {2437, 2444, 336}, {2447, 2448, 337}, {2451, 2472, 338}, {2474, 2480, 339}, {2482, 2482, 340}, {2486, 2489, 341}, {2524, 2525, 342}, {2527, 2529, 343}, {2534, 2543, 344}, {2544, 2545, 345}, {2565, 2570, 346}, {2575, 2576, 347}, {2579, 2600, 348}, {2602, 2608, 349}, {2610, 2611, 350}, {2613, 2614, 351}, {2616, 2617, 352}, {2649, 2652, 353}, {2654, 2654, 354}, {2662, 2671, 355}, {2674, 2676, 356}, {2693, 2699, 357}, {2701, 2701, 358}, {2703, 2705, 359}, {2707, 2728, 360}, {2730, 2736, 361}, {2738, 2739, 362}, {2741, 2745, 363}, {2749, 2749, 364}, {2784, 2784, 365}, {2790, 2799, 366}, {2821, 2828, 367}, {2831, 2832, 368}, {2835, 2856, 369}, {2858, 2864, 370}, {2866, 2867, 371}, {2870, 2873, 372}, {2877, 2877, 373}, {2908, 2909, 374}, {2911, 2913, 375}, {2918, 2927, 376}, {2949, 2954, 377}, {2958, 2960, 378}, {2962, 2965, 379}, {2969, 2970, 380}, {2972, 2972, 381}, {2974, 2975, 382}, {2979, 2980, 383}, {2984, 2986, 384}, {2990, 2997, 385}, {2999, 3001, 386}, {3047, 3055, 387}, {3077, 3084, 388}, {3086, 3088, 389}, {3090, 3112, 390}, {3114, 3123, 391}, {3125, 3129, 392}, {3168, 3169, 393}, {3174, 3183, 394}, {3205, 3212, 395}, {3214, 3216, 396}, {3218, 3240, 397}, {3242, 3251, 398}, {3253, 3257, 399}, {3294, 3294, 400}, {3296, 3297, 401}, {3302, 3311, 402}, {3333, 3340, 403}, {3342, 3344, 404}, {3346, 3368, 405}, {3370, 3385, 406}, {3424, 3425, 407}, {3430, 3439, 408}, {3585, 3630, 409}, {3632, 3632, 410}, {3634, 3635, 411}, {3648, 3654, 412}, {3664, 3673, 413}, {3713, 3714, 414}, {3716, 3716, 415}, {3719, 3720, 416}, {3722, 3722, 417}, {3725, 3725, 418}, {3732, 3735, 419}, {3737, 3743, 420}, {3745, 3747, 421}, {3749, 3749, 422}, {3751, 3751, 423}, {3754, 3755, 424}, {3757, 3758, 425}, {3760, 3760, 426}, {3762, 3763, 427}, {3773, 3773, 428}, {3776, 3780, 429}, {3782, 3782, 430}, {3792, 3801, 431}, {3804, 3805, 432}, {3872, 3881, 433}, {3904, 3911, 434}, {3913, 3945, 435}, {4256, 4293, 436}, {4304, 4342, 437}, {4352, 4441, 438}, {4447, 4514, 439}, {4520, 4601, 440}, {7680, 7835, 441}, {7840, 7929, 442}, {7936, 7957, 443}, {7960, 7965, 444}, {7968, 8005, 445}, {8008, 8013, 446}, {8016, 8023, 447}, {8025, 8025, 448}, {8027, 8027, 449}, {8029, 8029, 450}, {8031, 8061, 451}, {8064, 8116, 452}, {8118, 8124, 453}, {8126, 8126, 454}, {8130, 8132, 455}, {8134, 8140, 456}, {8144, 8147, 457}, {8150, 8155, 458}, {8160, 8172, 459}, {8178, 8180, 460}, {8182, 8188, 461}, {8319, 8319, 462}, {8450, 8450, 463}, {8455, 8455, 464}, {8458, 8467, 465}, {8469, 8469, 466}, {8472, 8477, 467}, {8484, 8484, 468}, {8486, 8486, 469}, {8488, 8488, 470}, {8490, 8497, 471}, {8499, 8504, 472}, {12293, 12293, 473}, {12337, 12341, 474}, {12353, 12436, 475}, {12443, 12446, 476}, {12449, 12538, 477}, {12540, 12542, 478}, {12549, 12588, 479}, {12593, 12686, 480}, {19968, 40869, 481}, {44032, 55203, 482}, {63744, 64045, 483}, {64256, 64262, 484}, {64275, 64279, 485}, {64287, 64296, 486}, {64298, 64310, 487}, {64312, 64316, 488}, {64318, 64318, 489}, {64320, 64321, 490}, {64323, 64324, 491}, {64326, 64433, 492}, {64467, 64829, 493}, {64848, 64911, 494}, {64914, 64967, 495}, {65008, 65019, 496}, {65136, 65138, 497}, {65140, 65140, 498}, {65142, 65276, 499}, {65296, 65305, 500}, {65313, 65338, 501}, {65345, 65370, 502}, {65382, 65470, 503}, {65474, 65479, 504}, {65482, 65487, 505}, {65490, 65495, 506}, {65498, 65500, 507}, },
            {{61, 61, 508}, },
            {{38, 38, 509}, {61, 61, 510}, },
            {{0, 9, 511}, {11, 12, 511}, {14, 38, 511}, {40, 91, 511}, {92, 92, 512}, {93, 65535, 511}, },
            {},
            {},
            {{61, 61, 513}, },
            {{43, 43, 514}, {61, 61, 515}, },
            {},
            {{45, 45, 516}, {61, 61, 517}, },
            {{46, 46, 518}, {48, 48, 519}, {49, 49, 520}, {50, 50, 521}, {51, 51, 522}, {52, 52, 523}, {53, 53, 524}, {54, 54, 525}, {55, 55, 526}, {56, 56, 527}, {57, 57, 528}, },
            {{42, 42, 529}, {47, 47, 530}, {61, 61, 531}, },
            {{46, 46, 532}, {48, 48, 533}, {49, 49, 534}, {50, 50, 535}, {51, 51, 536}, {52, 52, 537}, {53, 53, 538}, {54, 54, 539}, {55, 55, 540}, {56, 56, 541}, {57, 57, 542}, {66, 66, 543}, {68, 68, 544}, {69, 69, 545}, {70, 70, 546}, {76, 76, 547}, {88, 88, 548}, {95, 95, 549}, {98, 98, 550}, {100, 100, 551}, {101, 101, 552}, {102, 102, 553}, {108, 108, 554}, {120, 120, 555}, },
            {{46, 46, 532}, {48, 48, 556}, {49, 49, 557}, {50, 50, 558}, {51, 51, 559}, {52, 52, 560}, {53, 53, 561}, {54, 54, 562}, {55, 55, 563}, {56, 56, 564}, {57, 57, 565}, {68, 76, -22}, {95, 95, 566}, {100, 108, -22}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {},
            {},
            {{60, 60, 567}, {61, 61, 568}, },
            {{61, 61, 569}, },
            {{61, 61, 570}, {62, 62, 571}, },
            {},
            {},
            {{36, 65500, -10}, },
            {},
            {},
            {{61, 61, 572}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 282}, {98, 98, 573}, {99, 114, 282}, {115, 115, 574}, {116, 122, 282}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 110, 282}, {111, 111, 575}, {112, 113, 282}, {114, 114, 576}, {115, 120, 282}, {121, 121, 577}, {122, 122, 282}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 578}, {98, 103, 282}, {104, 104, 579}, {105, 107, 282}, {108, 108, 580}, {109, 110, 282}, {111, 111, 581}, {112, 122, 282}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 100, 282}, {101, 101, 582}, {102, 110, 282}, {111, 111, 583}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 107, 282}, {108, 108, 584}, {109, 109, 282}, {110, 110, 585}, {111, 119, 282}, {120, 120, 586}, {121, 122, 282}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 587}, {98, 104, 282}, {105, 105, 588}, {106, 107, 282}, {108, 108, 589}, {109, 110, 282}, {111, 111, 590}, {112, 65500, -46}, },
            {{36, 110, -45}, {111, 111, 591}, {112, 65500, -46}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 101, 282}, {102, 102, 592}, {103, 108, 282}, {109, 109, 593}, {110, 110, 594}, {111, 122, 282}, {170, 65500, -10}, },
            {{36, 110, -45}, {111, 111, 595}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 97, 596}, {98, 100, 282}, {101, 101, 597}, {102, 116, 282}, {117, 117, 598}, {118, 122, 282}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 599}, {98, 113, 282}, {114, 114, 600}, {115, 116, 282}, {117, 117, 601}, {118, 65500, -54}, },
            {{36, 100, -47}, {101, 101, 602}, {102, 122, 282}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 103, 282}, {104, 104, 603}, {105, 115, 282}, {116, 116, 604}, {117, 117, 605}, {118, 118, 282}, {119, 119, 606}, {120, 120, 282}, {121, 121, 607}, {122, 65500, -45}, },
            {{36, 103, -57}, {104, 104, 608}, {105, 113, 282}, {114, 114, 609}, {115, 122, 282}, {170, 65500, -10}, },
            {{36, 110, -45}, {111, 111, 610}, {112, 65500, -46}, },
            {{36, 103, -57}, {104, 104, 611}, {105, 122, 282}, {170, 65500, -10}, },
            {},
            {{61, 61, 612}, {124, 124, 613}, },
            {},
            {},
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{9, 32, -2}, },
            {},
            {{0, 65535, -9}, },
            {},
            {{34, 34, 614}, {39, 39, 615}, {48, 48, 616}, {49, 49, 617}, {50, 50, 618}, {51, 51, 619}, {52, 52, 620}, {53, 53, 621}, {54, 54, 622}, {55, 55, 623}, {92, 92, 624}, {98, 98, 625}, {102, 102, 626}, {110, 110, 627}, {114, 114, 628}, {116, 116, 629}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {},
            {},
            {},
            {{39, 39, 630}, },
            {{34, 34, 631}, {39, 39, 632}, {48, 48, 633}, {49, 49, 634}, {50, 50, 635}, {51, 51, 636}, {52, 52, 637}, {53, 53, 638}, {54, 54, 639}, {55, 55, 640}, {92, 92, 641}, {98, 98, 642}, {102, 102, 643}, {110, 110, 644}, {114, 114, 645}, {116, 116, 646}, },
            {},
            {},
            {},
            {},
            {},
            {{46, 46, 647}, },
            {{48, 48, 648}, {49, 49, 649}, {50, 50, 650}, {51, 51, 651}, {52, 52, 652}, {53, 53, 653}, {54, 54, 654}, {55, 55, 655}, {56, 56, 656}, {57, 57, 657}, {68, 68, 658}, {69, 69, 659}, {70, 70, 660}, {95, 95, 661}, {100, 100, 662}, {101, 101, 663}, {102, 102, 664}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{0, 41, 665}, {42, 42, 666}, {43, 65535, 665}, },
            {{0, 9, 667}, {10, 10, 668}, {11, 12, 667}, {13, 13, 669}, {14, 65535, 667}, },
            {},
            {{48, 48, 670}, {49, 49, 671}, {50, 50, 672}, {51, 51, 673}, {52, 52, 674}, {53, 53, 675}, {54, 54, 676}, {55, 55, 677}, {56, 56, 678}, {57, 57, 679}, {68, 68, 680}, {69, 69, 681}, {70, 70, 682}, {100, 100, 683}, {101, 101, 684}, {102, 102, 685}, },
            {{46, 46, 532}, {48, 48, 686}, {49, 49, 687}, {50, 50, 688}, {51, 51, 689}, {52, 52, 690}, {53, 53, 691}, {54, 54, 692}, {55, 55, 693}, {56, 57, -22}, {68, 70, -22}, {76, 76, 694}, {95, 95, 695}, {100, 102, -22}, {108, 108, 696}, },
            {{46, 108, -535}, },
            {{46, 108, -535}, },
            {{46, 108, -535}, },
            {{46, 108, -535}, },
            {{46, 108, -535}, },
            {{46, 108, -535}, },
            {{46, 108, -535}, },
            {{46, 46, 532}, {48, 48, 697}, {49, 49, 698}, {50, 50, 699}, {51, 51, 700}, {52, 52, 701}, {53, 53, 702}, {54, 54, 703}, {55, 55, 704}, {56, 70, -535}, {95, 95, 705}, {100, 102, -22}, },
            {{46, 102, -543}, },
            {{48, 48, 706}, {49, 49, 707}, },
            {},
            {{43, 43, 708}, {45, 45, 709}, {48, 48, 710}, {49, 49, 711}, {50, 50, 712}, {51, 51, 713}, {52, 52, 714}, {53, 53, 715}, {54, 54, 716}, {55, 55, 717}, {56, 56, 718}, {57, 57, 719}, },
            {},
            {},
            {{46, 46, 720}, {48, 48, 721}, {49, 49, 722}, {50, 50, 723}, {51, 51, 724}, {52, 52, 725}, {53, 53, 726}, {54, 54, 727}, {55, 55, 728}, {56, 56, 729}, {57, 57, 730}, {65, 65, 731}, {66, 66, 732}, {67, 67, 733}, {68, 68, 734}, {69, 69, 735}, {70, 70, 736}, {97, 97, 737}, {98, 98, 738}, {99, 99, 739}, {100, 100, 740}, {101, 101, 741}, {102, 102, 742}, },
            {{48, 48, 743}, {49, 49, 744}, {50, 50, 745}, {51, 51, 746}, {52, 52, 747}, {53, 53, 748}, {54, 54, 749}, {55, 55, 750}, {56, 57, -22}, {95, 95, 549}, },
            {{48, 49, -545}, },
            {},
            {{43, 57, -547}, },
            {},
            {},
            {{46, 102, -550}, },
            {{46, 46, 532}, {48, 48, 751}, {49, 49, 752}, {50, 50, 753}, {51, 51, 754}, {52, 52, 755}, {53, 53, 756}, {54, 54, 757}, {55, 55, 758}, {56, 56, 759}, {57, 57, 760}, {68, 76, -22}, {95, 95, 761}, {100, 108, -22}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{48, 48, 762}, {49, 49, 763}, {50, 50, 764}, {51, 51, 765}, {52, 52, 766}, {53, 53, 767}, {54, 54, 768}, {55, 55, 769}, {56, 56, 770}, {57, 57, 771}, {95, 95, 566}, },
            {{61, 61, 772}, },
            {},
            {},
            {},
            {{61, 61, 773}, {62, 62, 774}, },
            {},
            {{36, 95, -10}, {97, 114, 282}, {115, 115, 775}, {116, 65500, -44}, },
            {{36, 114, -575}, {115, 115, 776}, {116, 65500, -44}, },
            {{36, 110, -45}, {111, 111, 777}, {112, 65500, -46}, },
            {{36, 100, -47}, {101, 101, 778}, {102, 65500, -56}, },
            {{36, 95, -10}, {97, 115, 282}, {116, 116, 779}, {117, 122, 282}, {170, 65500, -10}, },
            {{36, 114, -575}, {115, 115, 780}, {116, 116, 781}, {117, 65500, -579}, },
            {{36, 95, -10}, {97, 97, 782}, {98, 122, 282}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 783}, {98, 65500, -581}, },
            {{36, 95, -10}, {97, 109, 282}, {110, 110, 784}, {111, 65500, -52}, },
            {{36, 101, -52}, {102, 102, 785}, {103, 122, 282}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 116, 282}, {117, 117, 786}, {118, 65500, -54}, },
            {{36, 114, -575}, {115, 115, 787}, {116, 65500, -44}, },
            {{36, 116, -585}, {117, 117, 788}, {118, 65500, -54}, },
            {{36, 115, -579}, {116, 116, 789}, {117, 65500, -579}, },
            {{36, 107, -48}, {108, 108, 790}, {109, 122, 282}, {170, 65500, -10}, },
            {{36, 109, -583}, {110, 110, 791}, {111, 65500, -52}, },
            {{36, 110, -45}, {111, 111, 792}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 113, 282}, {114, 114, 793}, {115, 65500, -58}, },
            {{36, 115, -579}, {116, 116, 794}, {117, 65500, -579}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 111, 282}, {112, 112, 795}, {113, 122, 282}, {170, 65500, -10}, },
            {{36, 114, -575}, {115, 115, 796}, {116, 116, 797}, {117, 65500, -579}, },
            {{36, 109, -583}, {110, 110, 798}, {111, 65500, -52}, },
            {{36, 115, -579}, {116, 116, 799}, {117, 65500, -579}, },
            {{36, 95, -10}, {97, 118, 282}, {119, 119, 800}, {120, 122, 282}, {170, 65500, -10}, },
            {{36, 107, -48}, {108, 108, 801}, {109, 65500, -589}, },
            {{36, 95, -10}, {97, 98, 282}, {99, 99, 802}, {100, 122, 282}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 104, 282}, {105, 105, 803}, {106, 110, 282}, {111, 111, 804}, {112, 65500, -46}, },
            {{36, 97, -44}, {98, 98, 805}, {99, 122, 282}, {170, 65500, -10}, },
            {{36, 115, -579}, {116, 116, 806}, {117, 65500, -579}, },
            {{36, 110, -45}, {111, 111, 807}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 97, 808}, {98, 113, 282}, {114, 114, 809}, {115, 65500, -58}, },
            {{36, 111, -595}, {112, 112, 810}, {113, 65500, -595}, },
            {{36, 104, -602}, {105, 105, 811}, {106, 122, 282}, {170, 65500, -10}, },
            {{36, 109, -583}, {110, 110, 812}, {111, 65500, -52}, },
            {{36, 104, -602}, {105, 105, 813}, {106, 113, 282}, {114, 114, 814}, {115, 65500, -58}, },
            {{36, 95, -10}, {97, 97, 815}, {98, 116, 282}, {117, 117, 816}, {118, 120, 282}, {121, 121, 817}, {122, 65500, -45}, },
            {{36, 104, -602}, {105, 105, 818}, {106, 107, 282}, {108, 108, 819}, {109, 65500, -589}, },
            {{36, 104, -602}, {105, 105, 820}, {106, 65500, -608}, },
            {},
            {},
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 34, -9}, {35, 47, 275}, {48, 48, 821}, {49, 49, 822}, {50, 50, 823}, {51, 51, 824}, {52, 52, 825}, {53, 53, 826}, {54, 54, 827}, {55, 55, 828}, {56, 91, 275}, {92, 65535, -9}, },
            {{0, 65535, -618}, },
            {{0, 65535, -618}, },
            {{0, 65535, -618}, },
            {{0, 47, -618}, {48, 48, 829}, {49, 49, 830}, {50, 50, 831}, {51, 51, 832}, {52, 52, 833}, {53, 53, 834}, {54, 54, 835}, {55, 55, 836}, {56, 65535, -618}, },
            {{0, 65535, -622}, },
            {{0, 65535, -622}, },
            {{0, 65535, -622}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {},
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, {48, 48, 838}, {49, 49, 839}, {50, 50, 840}, {51, 51, 841}, {52, 52, 842}, {53, 53, 843}, {54, 54, 844}, {55, 55, 845}, },
            {{39, 55, -635}, },
            {{39, 55, -635}, },
            {{39, 55, -635}, },
            {{39, 39, 837}, {48, 48, 846}, {49, 49, 847}, {50, 50, 848}, {51, 51, 849}, {52, 52, 850}, {53, 53, 851}, {54, 54, 852}, {55, 55, 853}, },
            {{39, 55, -639}, },
            {{39, 55, -639}, },
            {{39, 55, -639}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {},
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {{48, 102, -521}, },
            {},
            {{43, 43, 854}, {45, 45, 855}, {48, 48, 856}, {49, 49, 857}, {50, 50, 858}, {51, 51, 859}, {52, 52, 860}, {53, 53, 861}, {54, 54, 862}, {55, 55, 863}, {56, 56, 864}, {57, 57, 865}, },
            {},
            {{48, 57, -521}, {95, 95, 661}, },
            {},
            {{43, 57, -661}, },
            {},
            {{0, 65535, -531}, },
            {{0, 41, 866}, {42, 42, 666}, {43, 46, 866}, {47, 47, 867}, {48, 65535, 866}, },
            {{0, 65535, -532}, },
            {},
            {{10, 10, 868}, },
            {{48, 48, 869}, {49, 49, 870}, {50, 50, 871}, {51, 51, 872}, {52, 52, 873}, {53, 53, 874}, {54, 54, 875}, {55, 55, 876}, {56, 56, 877}, {57, 57, 878}, {68, 70, -534}, {95, 95, 879}, {100, 102, -534}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {},
            {{43, 43, 880}, {45, 45, 881}, {48, 48, 882}, {49, 49, 883}, {50, 50, 884}, {51, 51, 885}, {52, 52, 886}, {53, 53, 887}, {54, 54, 888}, {55, 55, 889}, {56, 56, 890}, {57, 57, 891}, },
            {},
            {},
            {{43, 57, -683}, },
            {},
            {{46, 108, -535}, },
            {{46, 108, -535}, },
            {{46, 108, -535}, },
            {{46, 108, -535}, },
            {{46, 108, -535}, },
            {{46, 108, -535}, },
            {{46, 108, -535}, },
            {{46, 108, -535}, },
            {},
            {{48, 57, -535}, {95, 95, 695}, },
            {},
            {{46, 102, -543}, },
            {{46, 102, -543}, },
            {{46, 102, -543}, },
            {{46, 102, -543}, },
            {{46, 102, -543}, },
            {{46, 102, -543}, },
            {{46, 102, -543}, },
            {{46, 102, -543}, },
            {{48, 57, -543}, {95, 95, 705}, },
            {{48, 48, 892}, {49, 49, 893}, {76, 76, 894}, {95, 95, 895}, {108, 108, 896}, },
            {{48, 108, -708}, },
            {{48, 57, -547}, },
            {{48, 57, -547}, },
            {{48, 48, 897}, {49, 49, 898}, {50, 50, 899}, {51, 51, 900}, {52, 52, 901}, {53, 53, 902}, {54, 54, 903}, {55, 55, 904}, {56, 56, 905}, {57, 57, 906}, {68, 68, 907}, {70, 70, 908}, {95, 95, 909}, {100, 100, 910}, {102, 102, 911}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 48, 912}, {49, 49, 913}, {50, 50, 914}, {51, 51, 915}, {52, 52, 916}, {53, 53, 917}, {54, 54, 918}, {55, 55, 919}, {56, 56, 920}, {57, 57, 921}, {65, 65, 922}, {66, 66, 923}, {67, 67, 924}, {68, 68, 925}, {69, 69, 926}, {70, 70, 927}, {97, 97, 928}, {98, 98, 929}, {99, 99, 930}, {100, 100, 931}, {101, 101, 932}, {102, 102, 933}, },
            {{46, 46, 934}, {48, 48, 935}, {49, 49, 936}, {50, 50, 937}, {51, 51, 938}, {52, 52, 939}, {53, 53, 940}, {54, 54, 941}, {55, 55, 942}, {56, 56, 943}, {57, 57, 944}, {65, 65, 945}, {66, 66, 946}, {67, 67, 947}, {68, 68, 948}, {69, 69, 949}, {70, 70, 950}, {76, 76, 951}, {80, 80, 952}, {95, 95, 953}, {97, 97, 954}, {98, 98, 955}, {99, 99, 956}, {100, 100, 957}, {101, 101, 958}, {102, 102, 959}, {108, 108, 960}, {112, 112, 961}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 46, 532}, {48, 48, 962}, {49, 49, 963}, {50, 50, 964}, {51, 51, 965}, {52, 52, 966}, {53, 53, 967}, {54, 54, 968}, {55, 55, 969}, {56, 76, -535}, {95, 95, 970}, {100, 108, -535}, },
            {{46, 108, -745}, },
            {{46, 108, -745}, },
            {{46, 108, -745}, },
            {{46, 108, -745}, },
            {{46, 108, -745}, },
            {{46, 108, -745}, },
            {{46, 108, -745}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{46, 108, -558}, },
            {{48, 57, -558}, {95, 95, 761}, },
            {{46, 46, 532}, {48, 48, 971}, {49, 49, 972}, {50, 50, 973}, {51, 51, 974}, {52, 52, 975}, {53, 53, 976}, {54, 54, 977}, {55, 55, 978}, {56, 56, 979}, {57, 57, 980}, {68, 76, -22}, {95, 95, 981}, {100, 108, -22}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {},
            {},
            {{61, 61, 982}, },
            {{36, 115, -579}, {116, 116, 983}, {117, 65500, -579}, },
            {{36, 100, -47}, {101, 101, 984}, {102, 65500, -56}, },
            {{36, 107, -48}, {108, 108, 985}, {109, 65500, -589}, },
            {{36, 95, -10}, {97, 97, 986}, {98, 65500, -581}, },
            {{36, 100, -47}, {101, 101, 987}, {102, 65500, -56}, },
            {{36, 100, -47}, {101, 101, 988}, {102, 65500, -56}, },
            {{36, 98, -601}, {99, 99, 989}, {100, 65500, -601}, },
            {{36, 113, -592}, {114, 114, 990}, {115, 65500, -58}, },
            {{36, 114, -575}, {115, 115, 991}, {116, 65500, -44}, },
            {{36, 114, -575}, {115, 115, 992}, {116, 116, 993}, {117, 65500, -579}, },
            {{36, 95, -10}, {97, 97, 994}, {98, 65500, -581}, },
            {{36, 97, -44}, {98, 98, 995}, {99, 65500, -603}, },
            {{36, 100, -47}, {101, 101, 996}, {102, 65500, -56}, },
            {{36, 95, -10}, {97, 108, 282}, {109, 109, 997}, {110, 122, 282}, {170, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 998}, {102, 65500, -56}, },
            {{36, 114, -575}, {115, 115, 999}, {116, 65500, -44}, },
            {{36, 95, -10}, {97, 97, 1000}, {98, 65500, -581}, },
            {{36, 95, -10}, {97, 97, 1001}, {98, 65500, -581}, },
            {{36, 65500, -10}, },
            {{36, 110, -45}, {111, 111, 1002}, {112, 65500, -46}, },
            {{36, 107, -48}, {108, 108, 1003}, {109, 110, 282}, {111, 111, 1004}, {112, 65500, -46}, },
            {{36, 115, -579}, {116, 116, 1005}, {117, 65500, -579}, },
            {{36, 100, -47}, {101, 101, 1006}, {102, 65500, -56}, },
            {{36, 95, -10}, {97, 102, 282}, {103, 103, 1007}, {104, 122, 282}, {170, 65500, -10}, },
            {{36, 104, -602}, {105, 105, 1008}, {106, 65500, -608}, },
            {{36, 65500, -10}, },
            {{36, 107, -48}, {108, 108, 1009}, {109, 65500, -589}, },
            {{36, 95, -10}, {97, 106, 282}, {107, 107, 1010}, {108, 122, 282}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 117, 282}, {118, 118, 1011}, {119, 122, 282}, {170, 65500, -10}, },
            {{36, 115, -579}, {116, 116, 1012}, {117, 65500, -579}, },
            {{36, 107, -48}, {108, 108, 1013}, {109, 65500, -589}, },
            {{36, 116, -585}, {117, 117, 1014}, {118, 65500, -54}, },
            {{36, 113, -592}, {114, 114, 1015}, {115, 65500, -58}, },
            {{36, 115, -579}, {116, 116, 1016}, {117, 65500, -579}, },
            {{36, 104, -602}, {105, 105, 1017}, {106, 65500, -608}, },
            {{36, 100, -47}, {101, 101, 1018}, {102, 65500, -56}, },
            {{36, 115, -579}, {116, 116, 1019}, {117, 65500, -579}, },
            {{36, 98, -601}, {99, 99, 1020}, {100, 65500, -601}, },
            {{36, 114, -575}, {115, 115, 1021}, {116, 65500, -44}, },
            {{36, 110, -45}, {111, 111, 1022}, {112, 65500, -46}, },
            {{36, 109, -583}, {110, 110, 1023}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1024}, {102, 65500, -56}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 99, 282}, {100, 100, 1025}, {101, 122, 282}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1026}, {98, 65500, -581}, },
            {{36, 107, -48}, {108, 108, 1027}, {109, 65500, -589}, },
            {{0, 47, -618}, {48, 48, 1028}, {49, 49, 1029}, {50, 50, 1030}, {51, 51, 1031}, {52, 52, 1032}, {53, 53, 1033}, {54, 54, 1034}, {55, 55, 1035}, {56, 65535, -618}, },
            {{0, 65535, -823}, },
            {{0, 65535, -823}, },
            {{0, 65535, -823}, },
            {{0, 65535, -823}, },
            {{0, 65535, -823}, },
            {{0, 65535, -823}, },
            {{0, 65535, -823}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {},
            {{39, 39, 837}, {48, 48, 1036}, {49, 49, 1037}, {50, 50, 1038}, {51, 51, 1039}, {52, 52, 1040}, {53, 53, 1041}, {54, 54, 1042}, {55, 55, 1043}, },
            {{39, 55, -840}, },
            {{39, 55, -840}, },
            {{39, 55, -840}, },
            {{39, 55, -840}, },
            {{39, 55, -840}, },
            {{39, 55, -840}, },
            {{39, 55, -840}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{48, 57, -661}, },
            {{48, 57, -661}, },
            {{48, 48, 1044}, {49, 49, 1045}, {50, 50, 1046}, {51, 51, 1047}, {52, 52, 1048}, {53, 53, 1049}, {54, 54, 1050}, {55, 55, 1051}, {56, 56, 1052}, {57, 57, 1053}, {68, 68, 658}, {70, 70, 660}, {95, 95, 1054}, {100, 100, 662}, {102, 102, 664}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{0, 41, 1055}, {42, 42, 666}, {43, 65535, 1055}, },
            {},
            {},
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 102, -672}, },
            {{48, 57, -672}, {95, 95, 879}, },
            {{48, 57, -683}, },
            {{48, 57, -683}, },
            {{48, 48, 1056}, {49, 49, 1057}, {50, 50, 1058}, {51, 51, 1059}, {52, 52, 1060}, {53, 53, 1061}, {54, 54, 1062}, {55, 55, 1063}, {56, 56, 1064}, {57, 57, 1065}, {68, 68, 680}, {70, 70, 682}, {95, 95, 1066}, {100, 100, 683}, {102, 102, 685}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 108, -708}, },
            {{48, 108, -708}, },
            {},
            {{48, 49, -708}, {95, 95, 895}, },
            {},
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {{48, 102, -712}, },
            {},
            {},
            {{48, 57, -712}, {95, 95, 909}, },
            {},
            {},
            {{48, 48, 1067}, {49, 49, 1068}, {50, 50, 1069}, {51, 51, 1070}, {52, 52, 1071}, {53, 53, 1072}, {54, 54, 1073}, {55, 55, 1074}, {56, 56, 1075}, {57, 57, 1076}, {65, 65, 1077}, {66, 66, 1078}, {67, 67, 1079}, {68, 68, 1080}, {69, 69, 1081}, {70, 70, 1082}, {80, 80, 952}, {95, 95, 1083}, {97, 97, 1084}, {98, 98, 1085}, {99, 99, 1086}, {100, 100, 1087}, {101, 101, 1088}, {102, 102, 1089}, {112, 112, 961}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 70, -722}, {80, 80, 952}, {97, 102, -722}, {112, 112, 961}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {},
            {{43, 43, 1090}, {45, 45, 1091}, {48, 48, 1092}, {49, 49, 1093}, {50, 50, 1094}, {51, 51, 1095}, {52, 52, 1096}, {53, 53, 1097}, {54, 54, 1098}, {55, 55, 1099}, {56, 56, 1100}, {57, 57, 1101}, },
            {{48, 70, -723}, {95, 102, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {{46, 112, -723}, },
            {},
            {{43, 57, -954}, },
            {{46, 108, -745}, },
            {{46, 108, -745}, },
            {{46, 108, -745}, },
            {{46, 108, -745}, },
            {{46, 108, -745}, },
            {{46, 108, -745}, },
            {{46, 108, -745}, },
            {{46, 108, -745}, },
            {{48, 57, -745}, {95, 95, 970}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{46, 108, -764}, },
            {{48, 57, -764}, {95, 95, 981}, },
            {},
            {{36, 113, -592}, {114, 114, 1102}, {115, 65500, -58}, },
            {{36, 113, -592}, {114, 114, 1103}, {115, 65500, -58}, },
            {{36, 100, -47}, {101, 101, 1104}, {102, 65500, -56}, },
            {{36, 106, -804}, {107, 107, 1105}, {108, 65500, -804}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 103, -57}, {104, 104, 1106}, {105, 65500, -60}, },
            {{36, 65500, -10}, },
            {{36, 114, -575}, {115, 115, 1107}, {116, 65500, -44}, },
            {{36, 115, -579}, {116, 116, 1108}, {117, 65500, -579}, },
            {{36, 104, -602}, {105, 105, 1109}, {106, 65500, -608}, },
            {{36, 116, -585}, {117, 117, 1110}, {118, 65500, -54}, },
            {{36, 107, -48}, {108, 108, 1111}, {109, 65500, -589}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -583}, {110, 110, 1112}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1113}, {102, 65500, -56}, },
            {{36, 107, -48}, {108, 108, 1114}, {109, 65500, -589}, },
            {{36, 115, -579}, {116, 116, 1115}, {117, 65500, -579}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1116}, {102, 65500, -56}, },
            {{36, 113, -592}, {114, 114, 1117}, {115, 65500, -58}, },
            {{36, 95, -10}, {97, 97, 1118}, {98, 65500, -581}, },
            {{36, 113, -592}, {114, 114, 1119}, {115, 65500, -58}, },
            {{36, 65500, -10}, },
            {{36, 117, -805}, {118, 118, 1120}, {119, 65500, -805}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1121}, {98, 65500, -581}, },
            {{36, 95, -10}, {97, 97, 1122}, {98, 65500, -581}, },
            {{36, 100, -47}, {101, 101, 1123}, {102, 65500, -56}, },
            {{36, 104, -602}, {105, 105, 1124}, {106, 65500, -608}, },
            {{36, 113, -592}, {114, 114, 1125}, {115, 65500, -58}, },
            {{36, 115, -579}, {116, 116, 1126}, {117, 65500, -579}, },
            {{36, 104, -602}, {105, 105, 1127}, {106, 65500, -608}, },
            {{36, 98, -601}, {99, 99, 1128}, {100, 65500, -601}, },
            {{36, 113, -592}, {114, 114, 1129}, {115, 65500, -58}, },
            {{36, 98, -601}, {99, 99, 1130}, {100, 65500, -601}, },
            {{36, 103, -57}, {104, 104, 1131}, {105, 65500, -60}, },
            {{36, 65500, -10}, },
            {{36, 118, -599}, {119, 119, 1132}, {120, 65500, -599}, },
            {{36, 114, -575}, {115, 115, 1133}, {116, 65500, -44}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -579}, {116, 116, 1134}, {117, 65500, -579}, },
            {{36, 100, -47}, {101, 101, 1135}, {102, 65500, -56}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{39, 39, 837}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 102, -858}, },
            {{48, 57, -858}, {95, 95, 1054}, },
            {{0, 65535, -868}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 102, -884}, },
            {{48, 57, -884}, {95, 95, 1066}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 70, -914}, {95, 102, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 112, -914}, },
            {{48, 57, -954}, },
            {{48, 57, -954}, },
            {{48, 48, 1136}, {49, 49, 1137}, {50, 50, 1138}, {51, 51, 1139}, {52, 52, 1140}, {53, 53, 1141}, {54, 54, 1142}, {55, 55, 1143}, {56, 56, 1144}, {57, 57, 1145}, {68, 68, 1146}, {70, 70, 1147}, {95, 95, 1148}, {100, 100, 1149}, {102, 102, 1150}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{36, 95, -10}, {97, 97, 1151}, {98, 65500, -581}, },
            {{36, 115, -579}, {116, 116, 1152}, {117, 65500, -579}, },
            {{36, 95, -10}, {97, 97, 1153}, {98, 65500, -581}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -583}, {110, 110, 1154}, {111, 65500, -52}, },
            {{36, 107, -48}, {108, 108, 1155}, {109, 65500, -589}, },
            {{36, 100, -47}, {101, 101, 1156}, {102, 65500, -56}, },
            {{36, 99, -820}, {100, 100, 1157}, {101, 65500, -820}, },
            {{36, 65500, -10}, },
            {{36, 107, -48}, {108, 108, 1158}, {109, 65500, -589}, },
            {{36, 65500, -10}, },
            {{36, 108, -790}, {109, 109, 1159}, {110, 65500, -790}, },
            {{36, 115, -579}, {116, 116, 1160}, {117, 65500, -579}, },
            {{36, 109, -583}, {110, 110, 1161}, {111, 65500, -52}, },
            {{36, 101, -52}, {102, 102, 1162}, {103, 65500, -584}, },
            {{36, 100, -47}, {101, 101, 1163}, {102, 65500, -56}, },
            {{36, 102, -800}, {103, 103, 1164}, {104, 65500, -800}, },
            {{36, 115, -579}, {116, 116, 1165}, {117, 65500, -579}, },
            {{36, 98, -601}, {99, 99, 1166}, {100, 65500, -601}, },
            {{36, 98, -601}, {99, 99, 1167}, {100, 65500, -601}, },
            {{36, 109, -583}, {110, 110, 1168}, {111, 65500, -52}, },
            {{36, 65500, -10}, },
            {{36, 98, -601}, {99, 99, 1169}, {100, 65500, -601}, },
            {{36, 115, -579}, {116, 116, 1170}, {117, 65500, -579}, },
            {{36, 65500, -10}, },
            {{36, 103, -57}, {104, 104, 1171}, {105, 65500, -60}, },
            {{36, 113, -592}, {114, 114, 1172}, {115, 65500, -58}, },
            {{36, 114, -575}, {115, 115, 1173}, {116, 65500, -44}, },
            {{36, 104, -602}, {105, 105, 1174}, {106, 65500, -608}, },
            {{36, 104, -602}, {105, 105, 1175}, {106, 65500, -608}, },
            {{36, 65500, -10}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {{48, 102, -1094}, },
            {},
            {},
            {{48, 57, -1094}, {95, 95, 1148}, },
            {},
            {},
            {{36, 98, -601}, {99, 99, 1176}, {100, 65500, -601}, },
            {{36, 65500, -10}, },
            {{36, 109, -583}, {110, 110, 1177}, {111, 65500, -52}, },
            {{36, 116, -585}, {117, 117, 1178}, {118, 65500, -54}, },
            {{36, 115, -579}, {116, 116, 1179}, {117, 65500, -579}, },
            {{36, 65500, -10}, },
            {{36, 114, -575}, {115, 115, 1180}, {116, 65500, -44}, },
            {{36, 95, -10}, {97, 120, 282}, {121, 121, 1181}, {122, 65500, -45}, },
            {{36, 100, -47}, {101, 101, 1182}, {102, 65500, -56}, },
            {{36, 65500, -10}, },
            {{36, 98, -601}, {99, 99, 1183}, {100, 65500, -601}, },
            {{36, 95, -10}, {97, 97, 1184}, {98, 65500, -581}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1185}, {102, 65500, -56}, },
            {{36, 100, -47}, {101, 101, 1186}, {102, 65500, -56}, },
            {{36, 115, -579}, {116, 116, 1187}, {117, 65500, -579}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 101, -52}, {102, 102, 1188}, {103, 65500, -584}, },
            {{36, 65500, -10}, },
            {{36, 110, -45}, {111, 111, 1189}, {112, 65500, -46}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1190}, {102, 65500, -56}, },
            {{36, 107, -48}, {108, 108, 1191}, {109, 65500, -589}, },
            {{36, 115, -579}, {116, 116, 1192}, {117, 65500, -579}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1193}, {102, 65500, -56}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -583}, {110, 110, 1194}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1195}, {102, 65500, -56}, },
            {{36, 98, -601}, {99, 99, 1196}, {100, 65500, -601}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1197}, {102, 65500, -56}, },
            {{36, 111, -595}, {112, 112, 1198}, {113, 65500, -595}, },
            {{36, 109, -583}, {110, 110, 1199}, {111, 65500, -52}, },
            {{36, 109, -583}, {110, 110, 1200}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1201}, {102, 65500, -56}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -579}, {116, 116, 1202}, {117, 65500, -579}, },
            {{36, 110, -45}, {111, 111, 1203}, {112, 65500, -46}, },
            {{36, 100, -47}, {101, 101, 1204}, {102, 65500, -56}, },
            {{36, 99, -820}, {100, 100, 1205}, {101, 65500, -820}, },
            {{36, 65500, -10}, },
            {{36, 104, -602}, {105, 105, 1206}, {106, 65500, -608}, },
            {{36, 115, -579}, {116, 116, 1207}, {117, 65500, -579}, },
            {{36, 65500, -10}, },
            {{36, 114, -575}, {115, 115, 1208}, {116, 65500, -44}, },
            {{36, 101, -52}, {102, 102, 1209}, {103, 65500, -584}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 121, 282}, {122, 122, 1210}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1211}, {102, 65500, -56}, },
            {{36, 99, -820}, {100, 100, 1212}, {101, 65500, -820}, },
            {{36, 65500, -10}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 106, 106, 106, 106, 106, 70, -1, 57, 89, 86, -1, 58, 59, 84, 82, 65, 83, 66, 85, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 73, 64, 68, 67, 69, 72, 105, 57, 62, 63, 88, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 60, 87, 61, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 106, 77, -1, 55, -1, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 100, 78, 97, -1, -1, 95, 80, 93, 81, 94, -1, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, -1, 0, 96, 52, 51, 51, 51, 51, 51, 51, 51, 51, -1, -1, -1, 52, -1, 52, 51, -1, -1, -1, 52, -1, 52, 51, -1, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, -1, 90, 75, 74, 76, 91, 99, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 13, 57, 57, 57, 57, 57, 57, 57, 57, 22, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 98, 79, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 104, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, -1, 52, -1, 52, -1, 52, -1, -1, 0, 0, 0, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, -1, 52, 52, -1, 52, 51, 51, 51, 51, 51, 51, 51, 51, 51, -1, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, 51, 51, -1, -1, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, -1, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, -1, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 101, 102, 92, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 21, 57, 57, 57, 27, 57, 57, 31, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 47, 57, 57, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, -1, 0, 0, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, -1, -1, -1, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 51, 51, 51, -1, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, -1, 52, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, -1, -1, 51, 51, 51, 51, 51, 51, 51, -1, 51, 51, 51, 51, 51, 51, 51, 51, -1, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, -1, 103, 57, 57, 57, 57, 5, 6, 57, 8, 57, 57, 57, 57, 57, 15, 16, 57, 57, 57, 57, 23, 57, 57, 57, 57, 29, 57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 43, 57, 57, 53, 48, 57, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, -1, -1, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 57, 57, 57, 4, 7, 9, 10, 57, 57, 57, 57, 53, 18, 20, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 37, 57, 57, 40, 57, 57, 44, 57, 57, 50, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, -1, 52, 52, 57, 2, 57, 57, 57, 14, 57, 57, 57, 25, 57, 57, 30, 57, 57, 57, 35, 36, 38, 57, 41, 57, 45, 57, 57, 57, 3, 57, 12, 17, 19, 57, 57, 57, 32, 33, 57, 57, 57, 57, 57, 1, 11, 57, 57, 57, 57, 39, 57, 57, 49, 57, 57, 28, 34, 57, 46, 24, 26, 57, 57, 42, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
